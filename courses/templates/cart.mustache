<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart</title>
</head>
<style>
    #page-local-courses-cart #page-header{
     display: none;
    }
    .cart-body {
    display: grid;
    grid-template-columns: 2fr 1fr;
    column-gap: 10px;
    row-gap: 20px;
}
.all-cart-items {
    width: 100%;
    margin: 51px 0;
}
.cart-itmes {
    display: flex;
    align-items: center;
    column-gap: 36px;
    
    background-color: var(--color-white);
   padding: 20px;
    border-radius: 40px;
  
  margin: 15px;
    box-shadow: var(--box-shadow);
    
}

.custome-input{
    display: flex;
}
.custome-input {
    display: flex;
    align-items: center;
    column-gap: 12px;
}

.cart-itmess{
    display: flex;
    flex-direction: column;
    column-gap: 36px;
    background-color: var(--color-white);
    padding: 20px;
    border-radius: 40px;
    margin: 15px;
    box-shadow: var(--box-shadow);
}
.cart-itmess label{
   margin: 0;
}
.select-copun {
    display: flex;
    /* align-items: center; */

    justify-content: center;
    margin: 16px 0;
    /* column-gap: 15px; */
    padding: 17px;
    flex-direction: column;
    
    row-gap: 14px;
}
span.custome-promo-info input{
    border: 2px dotted #dfdfdf; 
    
}
span.custome-promo-info input {
    border: 2px dotted #dfdfdf;
    height: 100%;
    padding: 5px;
}
span.custome-promo-info button{
    background: #6136ff;
    padding: 8px;
    color: white;
}
.loader {
  width: 16px;
  height: 16px;
  box-shadow: 0 30px, 0 -30px;
  border-radius: 4px;
  background: currentColor;
  display: block;
  margin: -50px auto 0;
  position: relative;
  color: #6a42ff;
  transform: translateY(30px);
  box-sizing: border-box;
  animation: animloader 2s ease infinite;
}
.loader::after,
.loader::before {
  content: '';  
  box-sizing: border-box;
  width: 16px;
  height: 16px;
  box-shadow: 0 30px, 0 -30px;
  border-radius: 4px;
  background: currentColor;
  color: #6a42ff;
  position: absolute;
  left: 30px;
  top: 0;
  animation: animloader 2s 0.2s ease infinite;
}
.loader::before {
  animation-delay: 0.4s;
  left: 60px;
}

@keyframes animloader {
  0% {
    top: 0;
    color: #6a42ff;
  }
  50% {
    top: 30px;
    color: rgba(255, 255, 255, 0.2);
  }
  100% {
    top: 0;
    color: #6a42ff;
  }
}
.custome-loader {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 54vh;
}
.remove{
    cursor: pointer;
}
.custom-checkout {
    padding: 10px;
    background: #6136ff;
    color: white;
}
.custom-checkout a{
   
    color: white;
}


/* progress */
:root {
	--green: #1cbd2c;
	--grey: #c4c4c4;
	--white: #ffffff;
	--padding: 1em;
}

* {
	padding: 0;
	border: 0;
	-webkit-transition: all 0.3s ease;
	-moz-transition: all 0.3s ease;
	-o-transition: all 0.3s ease;
	transition: all 0.3s ease;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}


.mainWrapper {
	width: 100ch;
	min-width: 40ch;
	max-width: 75vw;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.statusBar {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 0;
	width: 100%;
	position: relative;
	cursor: default;
}

.statusBar::before {
	content: "";
	height: 0.3em;
	background-color: var(--grey);
	position: absolute;
	left: var(--padding);
	right: var(--padding);
}

.pBar {
	content: "";
	height: 0.3em;
	border-radius: 0 0 0.15em 0.15em;
	background-color: var(--green);
	max-width: 100%;
	margin: 10px #000000 solid;
	position: absolute;
	left: 0;
	width: 0%;
}

.statusBar > .node {
	background-color: var(--grey);
	height: 1.2em;
	width: 1.2em;
	border-radius: 100%;
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.node > .text {
	font-weight: 200;
	color: var(--grey);
	text-align: center;
	position: absolute;
	top: 2.5em;
	cursor: ;
}

.node.done {
	background-color: var(--green);
}

.node > .text.done {
	color: var(--green);
}

.node > .main {
	position: absolute;
	border: 0.2em var(--grey) solid;
	width: 0;
	height: 0;
	border-radius: 100%;
}

.node > .main.done {
	border: 0.2em var(--green) solid;
	width: 2em;
	height: 2em;
	border-radius: 100%;
}

.mainWrapper > .buttonHolder {
	margin-top: 3em;
	display: flex;
	justify-content: center;
	align-items: center;
}

.button {
	padding: 0.5em;
	padding-left: 1em;
	padding-right: 1em;
	margin: 1em;
	font-size: 1.3em;
	border-radius: 1.5em;
	cursor: pointer;
}
.button.b-next {
	background-color: var(--green);
	color: var(--white);
}

.button.b-next:hover {
	box-shadow: 3px 5px 6px 0px rgba(0, 0, 0, 0.2);
}

.button.disabled,
.button.disabled:hover {
	opacity: 30%;
	cursor: default;
}

.button.b-next.disabled:hover {
	box-shadow: none;
}

.button.b-back {
	box-shadow: 0px 0px 0px 0.2em var(--green) inset;
	background-color: var(--white);
	color: var(--green);
}
.node > .text {
    font-weight: 200;
    color: var(--grey);
    font-size: 12px;
    text-align: center;
    position: absolute;
    top: 2.5em;
 
}
.made {
	position: absolute;
	bottom: 0.7em;
}

.made > .credit {
	opacity: 40%;
	color: #4b4b4b;
	text-align: center;
}
.mainWrapper {
    width: 60ch;
    min-width: 40ch;
    max-width: 75vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.custome-scrool {    display: flex;
    flex-direction: column;
    align-items: center;}
/* progress */

.custom-checkout{
    width: 100%;
}
.custome-input {
    display: flex;
    flex-direction: column;
    align-items: center;
    column-gap: 12px;
}
span.delete-amount {
    text-decoration: line-through;
    font-size: 16px;
    color: gray;
    font-weight: 500;
    margin-left: 5px;
}
.msgbox1 {
    display: flex;
    align-items: center;
    justify-content: center;
    background: #e2fcfb;
    border-radius: 10px;
}
p.couonapplied {
    margin: 0;
    padding: 10px 13px;
}
.msgbox1{
    display: none;
}
.custome-input {
    display: flex;
    flex-direction: column;
    align-items: center;
    column-gap: 12px;
    row-gap: 12px;
}
</style>
<style>
@keyframes confetti-slow {
  0% {
    transform: translate3d(0, 0, 0) rotateX(0) rotateY(0);
  }
  100% {
    transform: translate3d(25px, 105vh, 0) rotateX(360deg) rotateY(180deg);
  }
}
@keyframes confetti-medium {
  0% {
    transform: translate3d(0, 0, 0) rotateX(0) rotateY(0);
  }
  100% {
    transform: translate3d(100px, 105vh, 0) rotateX(100deg) rotateY(360deg);
  }
}
@keyframes confetti-fast {
  0% {
    transform: translate3d(0, 0, 0) rotateX(0) rotateY(0);
  }
  100% {
    transform: translate3d(-50px, 105vh, 0) rotateX(10deg) rotateY(250deg);
  }
}
.container1 {
  /* width: 100vw;
  height: 100vh; */
  background: #ffffff;
  border: 1px solid white;
  display: fixed;
  top: 0px;
}

.confetti-container {
  perspective: 700px;
  position: absolute;
  overflow: hidden;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.confetti {
  position: absolute;
  z-index: 1;
  top: -10px;
  border-radius: 0%;
}
.confetti--animation-slow {
  animation: confetti-slow 2.25s linear 1 forwards;
}
.confetti--animation-medium {
  animation: confetti-medium 1.75s linear 1 forwards;
}
.confetti--animation-fast {
  animation: confetti-fast 1.25s linear 1 forwards;
}


.checkmark-circle {
  width: 150px;
  height: 150px;
  position: relative;
  display: inline-block;
  vertical-align: top;
  margin-left: auto;
  margin-right: auto;
}

.checkmark-circle .background {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background: #00C09D;
  position: absolute;
}

.checkmark-circle .checkmark {
  border-radius: 5px;
}

.checkmark-circle .checkmark.draw:after {
  -webkit-animation-delay: 100ms;
  -moz-animation-delay: 100ms;
  animation-delay: 100ms;
  -webkit-animation-duration: 3s;
  -moz-animation-duration: 3s;
  animation-duration: 3s;
  -webkit-animation-timing-function: ease;
  -moz-animation-timing-function: ease;
  animation-timing-function: ease;
  -webkit-animation-name: checkmark;
  -moz-animation-name: checkmark;
  animation-name: checkmark;
  -webkit-transform: scaleX(-1) rotate(135deg);
  -moz-transform: scaleX(-1) rotate(135deg);
  -ms-transform: scaleX(-1) rotate(135deg);
  -o-transform: scaleX(-1) rotate(135deg);
  transform: scaleX(-1) rotate(135deg);
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.checkmark-circle .checkmark:after {
  opacity: 1;
  height: 75px;
  width: 37.5px;
  -webkit-transform-origin: left top;
  -moz-transform-origin: left top;
  -ms-transform-origin: left top;
  -o-transform-origin: left top;
  transform-origin: left top;
  border-right: 15px solid white;
  border-top: 15px solid white;
  border-radius: 2.5px !important;
  content: "";
  left: 25px;
  top: 75px;
  position: absolute;
}

@-webkit-keyframes checkmark {
  0% {
    height: 0;
    width: 0;
    opacity: 1;
  }
  20% {
    height: 0;
    width: 37.5px;
    opacity: 1;
  }
  40% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
  100% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
}
@-moz-keyframes checkmark {
  0% {
    height: 0;
    width: 0;
    opacity: 1;
  }
  20% {
    height: 0;
    width: 37.5px;
    opacity: 1;
  }
  40% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
  100% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
}
@keyframes checkmark {
  0% {
    height: 0;
    width: 0;
    opacity: 1;
  }
  20% {
    height: 0;
    width: 37.5px;
    opacity: 1;
  }
  40% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
  100% {
    height: 75px;
    width: 37.5px;
    opacity: 1;
  }
}
.submit-btn {
  height: 45px;
  width: 200px;
  font-size: 15px;
  background-color: #00c09d;
  border: 1px solid #00ab8c;
  color: #fff;
  border-radius: 5px;
  box-shadow: 0 2px 4px 0 rgba(87, 71, 81, 0.2);
  cursor: pointer;
  transition: all 2s ease-out;
  transition: all 0.2s ease-out;
}

.submit-btn:hover {
  background-color: #2ca893;
  transition: all 0.2s ease-out;
}
.js-container.container1{
    position: inherit !important;
}
.js-container.container1{
    display: none;
}
    </style>
<body>
    <div class="js-container container1" style="top:0px !important;"></div>
    
   <div class="cart-body">
 
	<div class="custome-scrool">
        <div class="mainWrapper">
            <div class="statusBar">
                <span  class="pBar" ></span>
                <div class="node n0 done nConfirm0">
                    <div class="main done m0 done nConfirm0"></div>
                    <span class="text done t0 done nConfirm0">Confirm</span>
                </div>
        
                <div class="node n2  nConfirm2">
                    <div class="main  m2 nConfirm2"></div>
                    <span class="text t2 nConfirm2">Review</span>
                </div>
                <div class="node n3 nConfirm3">
                    <div class="main m3 nConfirm3"></div>
                    <span class="text t3 nConfirm3">Payment</span>
                </div>
                <div class="node n4 nConfirm4">
                    <div class="main m4 nConfirm4"></div>
                    <span class="text t4 nConfirm4">Complete</span>
                </div>
            </div>
            <!-- <div class="buttonHolder">
                <div class="button b-back disabled" id="back">Back</div>
                <div class="button b-next" id="next">Next</div>
            </div> -->
        </div>
    <div class="all-cart-items">
<div class="custome-loader">
    <span class="loader"></span>
</div>
       
      
    </div>
</div>
    <div class="cart-price">
<div class="cart-itmess">

<p>Total</p>
<h1>₹ <span class="custom-amount-mrp"></span> <span class="delete-amount"></span></h1>    

<hr>    



<p>Promotions</p>

<div class="msgbox1">
    <p class="couonapplied">Coupon applied</p>
</div>
<div class="select-copun">
    <form action="" class="custome-input">
        <div class="">
        <input type="radio" name="option" data-code="Referal" required>
        <label for="Referal">Referal</label>
    
        <input type="radio" name="option" data-code="Promocode"  required>
        <label for="Promocode">Promocode</label>
        </div>
        <span class="custome-promo-info">
            <input class="custome-promocode" placeholder="Enter Coupon" type="text" name="" id="" required>
            <button class="custom-apply">Apply</button>
        </span>
    </form>
</div>

<form action="{{config.wwwroot}}/local/courses/payment/checkout.php" method="post">
    <input class="postamount" type="hidden" name="data" value="">
    <input class="promocode-hidden" type="hidden" name="promocode" value="0">
    <input type="submit" class="custom-checkout" value="Checkout">
</form>

</div>
    </div>
   </div>

   <script>
   const couonapplied = document.querySelector('.couonapplied')
const msgbox = document.querySelector('.msgbox1')
const ReferalCodefn = ()=>{
  if(Number(cartcount) > 1){
              couonapplied.innerText = 'To use Referal Code you Cart item should be one'
              msgbox.style.display = 'block'
            console.log(cartcount)
         }else{
              couonapplied.innerText = ''
                  msgbox.style.display = 'none'
         }
}
let cartcount = 0 ;
    const promocodehidden = document.querySelector('.promocode-hidden')
const all_cart_items  = document.querySelector('.all-cart-items')
const custom_amount_mr  = document.querySelector('.custom-amount-mrp')
let totalamount = 0
    const getallcartitem =async ()=>{
 const responce = await fetch('{{config.wwwroot}}/local/courses/getCartItem.php')
 const data = await responce.json()
cartcount = data.length
 console.log(data)
const coursedata = data.map((e)=>{
    const { img,courseid,summary,id,coursename,amount} = e
    totalamount += Number(amount)
return (`  <div class="cart-itmes">
            <div class="img"><img width="100" src="${img}" alt=""></div>
            <div class="course-details">
                <div class="name"><h2>${coursename}</h2></div>
                <div class="price"><h3>₹ ${amount}</h3></div>
                <div class="details">${summary}</div>
            </div>
            <div class="info">
                <p class='remove' onclick="handeldelet('${id}')">Remove</p>
            </div>
        
        </div>`)
}).join(' ')
custom_amount_mr.innerText = totalamount
postamount.value = totalamount
all_cart_items.innerHTML = coursedata


ReferalCodefn()

    }

const deletecart = async(ele)=>{
    const url =
          "{{config.wwwroot}}/local/courses/deleteCartItemApi.php";

        const data = {
          id:ele,
        };

        // Making a POST request
        const fetchData = await fetch(url, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        // Getting the response
        const response = await fetchData.json();
        getcartitem()
        getallcartitem()
  
}
    const handeldelet = (e)=>{
        deletecart(e)
        console.log(e)
    }

    getallcartitem()
   









let code ;



    const select_data = document.querySelectorAll('.custome-input input[type="radio"]')
    console.log(select_data)
    select_data.forEach(element => {
        console.log(element)
        element.addEventListener('input',(e)=>{
            code = e.target.dataset.code
          if(e.target.dataset.code == 'Referal'){
       ReferalCodefn()
          }
        })
    });




const customeInput = document.querySelector('.custome-input')

const deleteamount = document.querySelector('.delete-amount')
const postamount = document.querySelector('.postamount')

let userid = '{{userid}}'
console.log(userid)
const customepromocode = document.querySelector('.custome-promocode')
const containercontainer1 = document.querySelector('.js-container.container1')
const getpromocode = async (data)=>{

    const res = await fetch('{{config.wwwroot}}/local/promocode/AddPromocodeApi.php',{
        method:'post',
        body:JSON.stringify(data)
    })
    const alldata = await res.json()
    console.log(alldata?.applied)
    if(alldata?.applied){
  console.log(Number(alldata?.per))
  promocodehidden.value = customepromocode.value
        const persentagedata = (Number(alldata?.per)  / 100) * totalamount;
console.log(persentagedata)
deleteamount.innerText = totalamount
custom_amount_mr.innerText = totalamount - persentagedata
postamount.value = totalamount - persentagedata
    }

    if(alldata?.msg.startsWith('Congratulations')){
        console.log('true')
        containercontainer1.style.display = 'block'
        setTimeout(()=>{
            containercontainer1.style.display = 'none'
        },3000)
    }else{
        console.log('false')
    }


    couonapplied.innerText =  alldata?.msg 
    msgbox.style.display = 'block'
}



customeInput.addEventListener('submit',(e)=>{
e.preventDefault()
if(code == 'Promocode'){
    
    getpromocode({promocode:customepromocode.value,userId:userid})
}else{
    console.log()
}

})










     window.addEventListener('load',()=>{
    const ManageCourses  =  document.querySelector('.Manage-Courses ')
    ManageCourses.classList.add('active')
  })
   </script>



<script>
    const Confettiful = function(el) {
  this.el = el;
  this.containerEl = null;
  
  this.confettiFrequency = 3;
  this.confettiColors = ['#EF2964', '#00C09D', '#2D87B0', '#48485E','#EFFF1D'];
  this.confettiAnimations = ['slow', 'medium', 'fast'];
  
  this._setupElements();
  this._renderConfetti();
};

Confettiful.prototype._setupElements = function() {
  const containerEl = document.createElement('div');
  const elPosition = this.el.style.position;
  
  if (elPosition !== 'relative' || elPosition !== 'absolute') {
    this.el.style.position = 'relative';
  }
  
  containerEl.classList.add('confetti-container');
  
  this.el.appendChild(containerEl);
  
  this.containerEl = containerEl;
};

Confettiful.prototype._renderConfetti = function() {
  this.confettiInterval = setInterval(() => {
    const confettiEl = document.createElement('div');
    const confettiSize = (Math.floor(Math.random() * 3) + 7) + 'px';
    const confettiBackground = this.confettiColors[Math.floor(Math.random() * this.confettiColors.length)];
    const confettiLeft = (Math.floor(Math.random() * this.el.offsetWidth)) + 'px';
    const confettiAnimation = this.confettiAnimations[Math.floor(Math.random() * this.confettiAnimations.length)];
    
    confettiEl.classList.add('confetti', 'confetti--animation-' + confettiAnimation);
    confettiEl.style.left = confettiLeft;
    confettiEl.style.width = confettiSize;
    confettiEl.style.height = confettiSize;
    confettiEl.style.backgroundColor = confettiBackground;
    
    confettiEl.removeTimeout = setTimeout(function() {
      confettiEl.parentNode.removeChild(confettiEl);
    }, 3000);
    
    this.containerEl.appendChild(confettiEl);
  }, 25);
};

window.confettiful = new Confettiful(document.querySelector('.js-container'));



</script>
</body>
</html>